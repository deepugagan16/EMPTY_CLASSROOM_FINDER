{"ast":null,"code":"var _jsxFileName = \"/Users/gagandeepn/Desktop/se_project/my-app/frontend/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create Context for Authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider Component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Function to log in\n  const login = () => {\n    setIsAuthenticated(true);\n  };\n\n  // Function to log out\n  const logout = () => {\n    setIsAuthenticated(false);\n  };\n\n  // You can use useEffect to check authentication status from localStorage or a token\n  useEffect(() => {\n    // Example: Check authentication status\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom Hook to use Auth Context\n_s(AuthProvider, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","login","logout","token","localStorage","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/gagandeepn/Desktop/se_project/my-app/frontend/src/AuthContext.js"],"sourcesContent":["// frontend/src/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create Context for Authentication\nconst AuthContext = createContext();\n\n// Provider Component\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    // Function to log in\n    const login = () => {\n        setIsAuthenticated(true);\n    };\n\n    // Function to log out\n    const logout = () => {\n        setIsAuthenticated(false);\n    };\n\n    // You can use useEffect to check authentication status from localStorage or a token\n    useEffect(() => {\n        // Example: Check authentication status\n        const token = localStorage.getItem('authToken');\n        if (token) {\n            setIsAuthenticated(true);\n        }\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\n// Custom Hook to use Auth Context\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAMW,KAAK,GAAGA,CAAA,KAAM;IAChBD,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACjBF,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACPH,kBAAkB,CAAC,IAAI,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,eAAe;MAAEE,KAAK;MAAEC;IAAO,CAAE;IAAAL,QAAA,EAC3DA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAb,EAAA,CA7BaF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AA8BzB,OAAO,MAAMiB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOvB,UAAU,CAACI,WAAW,CAAC;AAClC,CAAC;AAACmB,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}