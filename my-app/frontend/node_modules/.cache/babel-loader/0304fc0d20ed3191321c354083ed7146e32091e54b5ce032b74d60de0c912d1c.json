{"ast":null,"code":"var _jsxFileName = \"/Users/gagandeepn/Desktop/se_project/my-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { Container, Typography, FormControl, InputLabel, Select, MenuItem, Grid, Button, Paper, List, ListItem, ListItemText, Snackbar } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport LoginPage from './components/LoginPage';\nimport BookingPage from './components/BookingPage';\nimport './App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [classrooms, setClassrooms] = React.useState([]);\n  const [location, setLocation] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [day, setDay] = React.useState('');\n  const [floor, setFloor] = React.useState('');\n  const [error, setError] = React.useState('');\n  const [success, setSuccess] = React.useState('');\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    // Fetch classroom data from the backend or use sample data\n    const fetchClassrooms = async () => {\n      try {\n        const response = await fetch('/api/classrooms'); // Adjust the endpoint as needed\n        if (!response.ok) {\n          throw new Error('Failed to fetch classrooms');\n        }\n        const data = await response.json();\n        setClassrooms(data);\n      } catch (err) {\n        setError('Error fetching classrooms');\n        setSnackbarOpen(true);\n        console.error('Error fetching classrooms:', err);\n      }\n    };\n    fetchClassrooms();\n  }, []);\n  const handleLocationChange = event => setLocation(event.target.value);\n  const handleTimeChange = event => setTime(event.target.value);\n  const handleDayChange = event => setDay(event.target.value);\n  const handleFloorChange = event => setFloor(event.target.value);\n  const handlePresentlyClick = () => {\n    const {\n      currentSlot,\n      currentDay\n    } = getCurrentTimeSlotAndDay();\n    if (currentSlot) {\n      setTime(currentSlot);\n      setDay(currentDay);\n      // Re-filter the classrooms based on the current time and day\n      setClassrooms(prevClassrooms => prevClassrooms.filter(room => room.availableTimes.includes(currentSlot) && room.day === currentDay));\n    }\n  };\n  const getCurrentTimeSlotAndDay = () => {\n    const now = new Date();\n    const hours = now.getHours();\n    const dayIndex = now.getDay(); // 0 for Sunday, 1 for Monday, etc.\n\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const currentDay = daysOfWeek[dayIndex];\n    const timeSlots = ['8:00 AM - 9:00 AM', '9:00 AM - 10:00 AM', '10:00 AM - 11:00 AM', '11:00 AM - 12:00 PM', '12:00 PM - 1:00 PM', '1:00 PM - 2:00 PM', '2:00 PM - 3:00 PM', '3:00 PM - 4:00 PM', '4:00 PM - 5:00 PM', '5:00 PM - 6:00 PM', '6:00 PM - 7:00 PM', '7:00 PM - 8:00 PM'];\n    let currentSlot = null;\n    for (let i = 0; i < timeSlots.length; i++) {\n      const [start, end] = timeSlots[i].split(' - ');\n      const startHour = parseInt(start.split(':')[0]) + (start.includes('PM') && start.split(':')[0] !== '12' ? 12 : 0);\n      const endHour = parseInt(end.split(':')[0]) + (end.includes('PM') && end.split(':')[0] !== '12' ? 12 : 0);\n      if (hours >= startHour && hours < endHour) {\n        currentSlot = timeSlots[i];\n        break;\n      }\n    }\n    return {\n      currentSlot,\n      currentDay\n    };\n  };\n  const filteredClassrooms = classrooms.filter(room => {\n    return (!location || room.location === location) && (!time || room.availableTimes.includes(time)) && (!day || room.day === day) && (!floor || room.floor === parseInt(floor));\n  });\n  const timeSlots = ['8:00 AM - 9:00 AM', '9:00 AM - 10:00 AM', '10:00 AM - 11:00 AM', '11:00 AM - 12:00 PM', '12:00 PM - 1:00 PM', '1:00 PM - 2:00 PM', '2:00 PM - 3:00 PM', '3:00 PM - 4:00 PM', '4:00 PM - 5:00 PM', '5:00 PM - 6:00 PM', '6:00 PM - 7:00 PM', '7:00 PM - 8:00 PM'];\n  const getFloorsForLocation = location => {\n    switch (location) {\n      case 'AB1':\n      case 'AB2':\n        return Array.from({\n          length: 4\n        }, (_, i) => i + 1);\n      case 'CB':\n        return Array.from({\n          length: 10\n        }, (_, i) => i + 1);\n      default:\n        return [];\n    }\n  };\n  const floors = getFloorsForLocation(location);\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Available Classrooms and Labs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr',\n        gridTemplateRows: 'auto auto auto',\n        gap: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          gridColumn: '1 / 2'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: location,\n            onChange: handleLocationChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"All Locations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"AB1\",\n              children: \"AB1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"AB2\",\n              children: \"AB2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"CB\",\n              children: \"CB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          gridColumn: '2 / 3'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Floor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: floor,\n            onChange: handleFloorChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"All Floors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), floors.map(floorNumber => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: floorNumber,\n              children: floorNumber\n            }, floorNumber, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          gridColumn: '1 / 2'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: time,\n            onChange: handleTimeChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"All Times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), timeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: slot,\n              children: slot\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          gridColumn: '2 / 3'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: day,\n            onChange: handleDayChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"All Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Tuesday\",\n              children: \"Tuesday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Wednesday\",\n              children: \"Wednesday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Thursday\",\n              children: \"Thursday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Friday\",\n              children: \"Friday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Saturday\",\n              children: \"Saturday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          gridColumn: '3 / 4',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gridRow: '1 / span 2'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            fontSize: '18px',\n            padding: '12px 24px'\n          },\n          onClick: handlePresentlyClick,\n          children: \"PRESENTLY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"classroom-list\",\n      elevation: 3,\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Available Classrooms and Labs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: filteredClassrooms.map(classroom => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${classroom.name} - ${classroom.location} Floor ${classroom.floor}`,\n            secondary: `Capacity: ${classroom.capacity} | Status: ${classroom.status} | Available Times: ${classroom.availableTimes.join(', ')}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this)\n        }, classroom.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      style: {\n        marginTop: '20px'\n      },\n      onClick: () => navigate('/login'),\n      children: \"Book a Classroom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        onClose: handleSnackbarClose,\n        severity: error ? 'error' : 'success',\n        children: error || success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"wcjyQtFBL/kNKyWaZ2an8Z1VZX0=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nfunction AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/book\",\n      element: /*#__PURE__*/_jsxDEV(BookingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 9\n  }, this);\n}\n_c2 = AppWrapper;\nexport default AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","Routes","Route","useNavigate","Container","Typography","FormControl","InputLabel","Select","MenuItem","Grid","Button","Paper","List","ListItem","ListItemText","Snackbar","MuiAlert","LoginPage","BookingPage","jsxDEV","_jsxDEV","App","_s","classrooms","setClassrooms","useState","location","setLocation","time","setTime","day","setDay","floor","setFloor","error","setError","success","setSuccess","snackbarOpen","setSnackbarOpen","navigate","useEffect","fetchClassrooms","response","fetch","ok","Error","data","json","err","console","handleLocationChange","event","target","value","handleTimeChange","handleDayChange","handleFloorChange","handlePresentlyClick","currentSlot","currentDay","getCurrentTimeSlotAndDay","prevClassrooms","filter","room","availableTimes","includes","now","Date","hours","getHours","dayIndex","getDay","daysOfWeek","timeSlots","i","length","start","end","split","startHour","parseInt","endHour","filteredClassrooms","getFloorsForLocation","Array","from","_","floors","handleSnackbarClose","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","style","display","gridTemplateColumns","gridTemplateRows","gap","item","gridColumn","fullWidth","onChange","map","floorNumber","slot","index","justifyContent","alignItems","gridRow","color","fontSize","padding","onClick","elevation","marginTop","classroom","primary","name","secondary","capacity","status","join","id","open","autoHideDuration","onClose","severity","_c","AppWrapper","path","element","_c2","$RefreshReg$"],"sources":["/Users/gagandeepn/Desktop/se_project/my-app/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { Container, Typography, FormControl, InputLabel, Select, MenuItem, Grid, Button, Paper, List, ListItem, ListItemText, Snackbar } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport LoginPage from './components/LoginPage';\nimport BookingPage from './components/BookingPage';\nimport './App.css'; // Import the CSS file\n\nfunction App() {\n    const [classrooms, setClassrooms] = React.useState([]);\n    const [location, setLocation] = React.useState('');\n    const [time, setTime] = React.useState('');\n    const [day, setDay] = React.useState('');\n    const [floor, setFloor] = React.useState('');\n    const [error, setError] = React.useState('');\n    const [success, setSuccess] = React.useState('');\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n\n    const navigate = useNavigate();\n\n    React.useEffect(() => {\n        // Fetch classroom data from the backend or use sample data\n        const fetchClassrooms = async () => {\n            try {\n                const response = await fetch('/api/classrooms'); // Adjust the endpoint as needed\n                if (!response.ok) {\n                    throw new Error('Failed to fetch classrooms');\n                }\n                const data = await response.json();\n                setClassrooms(data);\n            } catch (err) {\n                setError('Error fetching classrooms');\n                setSnackbarOpen(true);\n                console.error('Error fetching classrooms:', err);\n            }\n        };\n        fetchClassrooms();\n    }, []);\n\n    const handleLocationChange = (event) => setLocation(event.target.value);\n    const handleTimeChange = (event) => setTime(event.target.value);\n    const handleDayChange = (event) => setDay(event.target.value);\n    const handleFloorChange = (event) => setFloor(event.target.value);\n\n    const handlePresentlyClick = () => {\n        const { currentSlot, currentDay } = getCurrentTimeSlotAndDay();\n        if (currentSlot) {\n            setTime(currentSlot);\n            setDay(currentDay);\n            // Re-filter the classrooms based on the current time and day\n            setClassrooms(prevClassrooms => prevClassrooms.filter(room =>\n                room.availableTimes.includes(currentSlot) &&\n                room.day === currentDay\n            ));\n        }\n    };\n\n    const getCurrentTimeSlotAndDay = () => {\n        const now = new Date();\n        const hours = now.getHours();\n        const dayIndex = now.getDay(); // 0 for Sunday, 1 for Monday, etc.\n\n        const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const currentDay = daysOfWeek[dayIndex];\n\n        const timeSlots = [\n            '8:00 AM - 9:00 AM',\n            '9:00 AM - 10:00 AM',\n            '10:00 AM - 11:00 AM',\n            '11:00 AM - 12:00 PM',\n            '12:00 PM - 1:00 PM',\n            '1:00 PM - 2:00 PM',\n            '2:00 PM - 3:00 PM',\n            '3:00 PM - 4:00 PM',\n            '4:00 PM - 5:00 PM',\n            '5:00 PM - 6:00 PM',\n            '6:00 PM - 7:00 PM',\n            '7:00 PM - 8:00 PM',\n        ];\n\n        let currentSlot = null;\n\n        for (let i = 0; i < timeSlots.length; i++) {\n            const [start, end] = timeSlots[i].split(' - ');\n            const startHour = parseInt(start.split(':')[0]) + (start.includes('PM') && start.split(':')[0] !== '12' ? 12 : 0);\n            const endHour = parseInt(end.split(':')[0]) + (end.includes('PM') && end.split(':')[0] !== '12' ? 12 : 0);\n\n            if (hours >= startHour && hours < endHour) {\n                currentSlot = timeSlots[i];\n                break;\n            }\n        }\n\n        return { currentSlot, currentDay };\n    };\n\n    const filteredClassrooms = classrooms.filter(room => {\n        return (\n            (!location || room.location === location) &&\n            (!time || room.availableTimes.includes(time)) &&\n            (!day || room.day === day) &&\n            (!floor || room.floor === parseInt(floor))\n        );\n    });\n\n    const timeSlots = [\n        '8:00 AM - 9:00 AM',\n        '9:00 AM - 10:00 AM',\n        '10:00 AM - 11:00 AM',\n        '11:00 AM - 12:00 PM',\n        '12:00 PM - 1:00 PM',\n        '1:00 PM - 2:00 PM',\n        '2:00 PM - 3:00 PM',\n        '3:00 PM - 4:00 PM',\n        '4:00 PM - 5:00 PM',\n        '5:00 PM - 6:00 PM',\n        '6:00 PM - 7:00 PM',\n        '7:00 PM - 8:00 PM',\n    ];\n\n    const getFloorsForLocation = (location) => {\n        switch (location) {\n            case 'AB1':\n            case 'AB2':\n                return Array.from({ length: 4 }, (_, i) => i + 1);\n            case 'CB':\n                return Array.from({ length: 10 }, (_, i) => i + 1);\n            default:\n                return [];\n        }\n    };\n\n    const floors = getFloorsForLocation(location);\n\n    const handleSnackbarClose = () => {\n        setSnackbarOpen(false);\n    };\n\n    return (\n        <Container className=\"App\">\n            <Typography variant=\"h4\" gutterBottom>Available Classrooms and Labs</Typography>\n            <Grid container spacing={2} style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridTemplateRows: 'auto auto auto', gap: '16px' }}>\n                {/* Location Filter */}\n                <Grid item style={{ gridColumn: '1 / 2' }}>\n                    <FormControl fullWidth>\n                        <InputLabel>Location</InputLabel>\n                        <Select value={location} onChange={handleLocationChange}>\n                            <MenuItem value=\"\"><em>All Locations</em></MenuItem>\n                            <MenuItem value=\"AB1\">AB1</MenuItem>\n                            <MenuItem value=\"AB2\">AB2</MenuItem>\n                            <MenuItem value=\"CB\">CB</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                {/* Floor Filter */}\n                <Grid item style={{ gridColumn: '2 / 3' }}>\n                    <FormControl fullWidth>\n                        <InputLabel>Floor</InputLabel>\n                        <Select value={floor} onChange={handleFloorChange}>\n                            <MenuItem value=\"\"><em>All Floors</em></MenuItem>\n                            {floors.map(floorNumber => (\n                                <MenuItem key={floorNumber} value={floorNumber}>{floorNumber}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                {/* Time Filter */}\n                <Grid item style={{ gridColumn: '1 / 2' }}>\n                    <FormControl fullWidth>\n                        <InputLabel>Time</InputLabel>\n                        <Select value={time} onChange={handleTimeChange}>\n                            <MenuItem value=\"\"><em>All Times</em></MenuItem>\n                            {timeSlots.map((slot, index) => (\n                                <MenuItem key={index} value={slot}>{slot}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                {/* Day Filter */}\n                <Grid item style={{ gridColumn: '2 / 3' }}>\n                    <FormControl fullWidth>\n                        <InputLabel>Day</InputLabel>\n                        <Select value={day} onChange={handleDayChange}>\n                            <MenuItem value=\"\"><em>All Days</em></MenuItem>\n                            <MenuItem value=\"Tuesday\">Tuesday</MenuItem>\n                            <MenuItem value=\"Wednesday\">Wednesday</MenuItem>\n                            <MenuItem value=\"Thursday\">Thursday</MenuItem>\n                            <MenuItem value=\"Friday\">Friday</MenuItem>\n                            <MenuItem value=\"Saturday\">Saturday</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                {/* Presently Button */}\n                <Grid item style={{ gridColumn: '3 / 4', display: 'flex', justifyContent: 'center', alignItems: 'center', gridRow: '1 / span 2' }}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{ fontSize: '18px', padding: '12px 24px' }}\n                        onClick={handlePresentlyClick}\n                    >\n                        PRESENTLY\n                    </Button>\n                </Grid>\n            </Grid>\n\n            <Paper className=\"classroom-list\" elevation={3} style={{ marginTop: '20px' }}>\n                <Typography variant=\"h6\">Available Classrooms and Labs</Typography>\n                <List>\n                    {filteredClassrooms.map(classroom => (\n                        <ListItem key={classroom.id}>\n                            <ListItemText\n                                primary={`${classroom.name} - ${classroom.location} Floor ${classroom.floor}`}\n                                secondary={`Capacity: ${classroom.capacity} | Status: ${classroom.status} | Available Times: ${classroom.availableTimes.join(', ')}`}\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            </Paper>\n\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ marginTop: '20px' }}\n                onClick={() => navigate('/login')}\n            >\n                Book a Classroom\n            </Button>\n\n            {/* Snackbar for Notifications */}\n            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\n                <MuiAlert onClose={handleSnackbarClose} severity={error ? 'error' : 'success'}>\n                    {error || success}\n                </MuiAlert>\n            </Snackbar>\n        </Container>\n    );\n}\n\nfunction AppWrapper() {\n    return (\n        <Routes>\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/book\" element={<BookingPage />} />\n            <Route path=\"/\" element={<App />} />\n        </Routes>\n    );\n}\n\nexport default AppWrapper;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,SAASC,SAAS,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,eAAe;AAC7J,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGzB,KAAK,CAAC0B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,KAAK,CAAC0B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAG9B,KAAK,CAAC0B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACK,GAAG,EAAEC,MAAM,CAAC,GAAGhC,KAAK,CAAC0B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,KAAK,CAAC0B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,KAAK,CAAC0B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGtC,KAAK,CAAC0B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGxC,KAAK,CAAC0B,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMe,QAAQ,GAAGtC,WAAW,CAAC,CAAC;EAE9BH,KAAK,CAAC0C,SAAS,CAAC,MAAM;IAClB;IACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACjD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QACjD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCxB,aAAa,CAACuB,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVd,QAAQ,CAAC,2BAA2B,CAAC;QACrCI,eAAe,CAAC,IAAI,CAAC;QACrBW,OAAO,CAAChB,KAAK,CAAC,4BAA4B,EAAEe,GAAG,CAAC;MACpD;IACJ,CAAC;IACDP,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,oBAAoB,GAAIC,KAAK,IAAKzB,WAAW,CAACyB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvE,MAAMC,gBAAgB,GAAIH,KAAK,IAAKvB,OAAO,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/D,MAAME,eAAe,GAAIJ,KAAK,IAAKrB,MAAM,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7D,MAAMG,iBAAiB,GAAIL,KAAK,IAAKnB,QAAQ,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAEjE,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAM;MAAEC,WAAW;MAAEC;IAAW,CAAC,GAAGC,wBAAwB,CAAC,CAAC;IAC9D,IAAIF,WAAW,EAAE;MACb9B,OAAO,CAAC8B,WAAW,CAAC;MACpB5B,MAAM,CAAC6B,UAAU,CAAC;MAClB;MACApC,aAAa,CAACsC,cAAc,IAAIA,cAAc,CAACC,MAAM,CAACC,IAAI,IACtDA,IAAI,CAACC,cAAc,CAACC,QAAQ,CAACP,WAAW,CAAC,IACzCK,IAAI,CAAClC,GAAG,KAAK8B,UACjB,CAAC,CAAC;IACN;EACJ,CAAC;EAED,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;IACnC,MAAMM,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,KAAK,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC;IAC5B,MAAMC,QAAQ,GAAGJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;;IAE/B,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;IACjG,MAAMb,UAAU,GAAGa,UAAU,CAACF,QAAQ,CAAC;IAEvC,MAAMG,SAAS,GAAG,CACd,mBAAmB,EACnB,oBAAoB,EACpB,qBAAqB,EACrB,qBAAqB,EACrB,oBAAoB,EACpB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,CACtB;IAED,IAAIf,WAAW,GAAG,IAAI;IAEtB,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,MAAM,CAACE,KAAK,EAAEC,GAAG,CAAC,GAAGJ,SAAS,CAACC,CAAC,CAAC,CAACI,KAAK,CAAC,KAAK,CAAC;MAC9C,MAAMC,SAAS,GAAGC,QAAQ,CAACJ,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIF,KAAK,CAACX,QAAQ,CAAC,IAAI,CAAC,IAAIW,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;MACjH,MAAMG,OAAO,GAAGD,QAAQ,CAACH,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAID,GAAG,CAACZ,QAAQ,CAAC,IAAI,CAAC,IAAIY,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;MAEzG,IAAIV,KAAK,IAAIW,SAAS,IAAIX,KAAK,GAAGa,OAAO,EAAE;QACvCvB,WAAW,GAAGe,SAAS,CAACC,CAAC,CAAC;QAC1B;MACJ;IACJ;IAEA,OAAO;MAAEhB,WAAW;MAAEC;IAAW,CAAC;EACtC,CAAC;EAED,MAAMuB,kBAAkB,GAAG5D,UAAU,CAACwC,MAAM,CAACC,IAAI,IAAI;IACjD,OACI,CAAC,CAACtC,QAAQ,IAAIsC,IAAI,CAACtC,QAAQ,KAAKA,QAAQ,MACvC,CAACE,IAAI,IAAIoC,IAAI,CAACC,cAAc,CAACC,QAAQ,CAACtC,IAAI,CAAC,CAAC,KAC5C,CAACE,GAAG,IAAIkC,IAAI,CAAClC,GAAG,KAAKA,GAAG,CAAC,KACzB,CAACE,KAAK,IAAIgC,IAAI,CAAChC,KAAK,KAAKiD,QAAQ,CAACjD,KAAK,CAAC,CAAC;EAElD,CAAC,CAAC;EAEF,MAAM0C,SAAS,GAAG,CACd,mBAAmB,EACnB,oBAAoB,EACpB,qBAAqB,EACrB,qBAAqB,EACrB,oBAAoB,EACpB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,CACtB;EAED,MAAMU,oBAAoB,GAAI1D,QAAQ,IAAK;IACvC,QAAQA,QAAQ;MACZ,KAAK,KAAK;MACV,KAAK,KAAK;QACN,OAAO2D,KAAK,CAACC,IAAI,CAAC;UAAEV,MAAM,EAAE;QAAE,CAAC,EAAE,CAACW,CAAC,EAAEZ,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;MACrD,KAAK,IAAI;QACL,OAAOU,KAAK,CAACC,IAAI,CAAC;UAAEV,MAAM,EAAE;QAAG,CAAC,EAAE,CAACW,CAAC,EAAEZ,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;MACtD;QACI,OAAO,EAAE;IACjB;EACJ,CAAC;EAED,MAAMa,MAAM,GAAGJ,oBAAoB,CAAC1D,QAAQ,CAAC;EAE7C,MAAM+D,mBAAmB,GAAGA,CAAA,KAAM;IAC9BlD,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACInB,OAAA,CAACjB,SAAS;IAACuF,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACtBvE,OAAA,CAAChB,UAAU;MAACwF,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAA6B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAChF7E,OAAA,CAACX,IAAI;MAACyF,SAAS;MAACC,OAAO,EAAE,CAAE;MAACC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,mBAAmB,EAAE,aAAa;QAAEC,gBAAgB,EAAE,gBAAgB;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAb,QAAA,gBAExIvE,OAAA,CAACX,IAAI;QAACgG,IAAI;QAACL,KAAK,EAAE;UAAEM,UAAU,EAAE;QAAQ,CAAE;QAAAf,QAAA,eACtCvE,OAAA,CAACf,WAAW;UAACsG,SAAS;UAAAhB,QAAA,gBAClBvE,OAAA,CAACd,UAAU;YAAAqF,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjC7E,OAAA,CAACb,MAAM;YAAC+C,KAAK,EAAE5B,QAAS;YAACkF,QAAQ,EAAEzD,oBAAqB;YAAAwC,QAAA,gBACpDvE,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,EAAE;cAAAqC,QAAA,eAACvE,OAAA;gBAAAuE,QAAA,EAAI;cAAa;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACpD7E,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,KAAK;cAAAqC,QAAA,EAAC;YAAG;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACpC7E,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,KAAK;cAAAqC,QAAA,EAAC;YAAG;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACpC7E,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,IAAI;cAAAqC,QAAA,EAAC;YAAE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAGP7E,OAAA,CAACX,IAAI;QAACgG,IAAI;QAACL,KAAK,EAAE;UAAEM,UAAU,EAAE;QAAQ,CAAE;QAAAf,QAAA,eACtCvE,OAAA,CAACf,WAAW;UAACsG,SAAS;UAAAhB,QAAA,gBAClBvE,OAAA,CAACd,UAAU;YAAAqF,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9B7E,OAAA,CAACb,MAAM;YAAC+C,KAAK,EAAEtB,KAAM;YAAC4E,QAAQ,EAAEnD,iBAAkB;YAAAkC,QAAA,gBAC9CvE,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,EAAE;cAAAqC,QAAA,eAACvE,OAAA;gBAAAuE,QAAA,EAAI;cAAU;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,EAChDT,MAAM,CAACqB,GAAG,CAACC,WAAW,iBACnB1F,OAAA,CAACZ,QAAQ;cAAmB8C,KAAK,EAAEwD,WAAY;cAAAnB,QAAA,EAAEmB;YAAW,GAA7CA,WAAW;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA6C,CAC1E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAGP7E,OAAA,CAACX,IAAI;QAACgG,IAAI;QAACL,KAAK,EAAE;UAAEM,UAAU,EAAE;QAAQ,CAAE;QAAAf,QAAA,eACtCvE,OAAA,CAACf,WAAW;UAACsG,SAAS;UAAAhB,QAAA,gBAClBvE,OAAA,CAACd,UAAU;YAAAqF,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC7B7E,OAAA,CAACb,MAAM;YAAC+C,KAAK,EAAE1B,IAAK;YAACgF,QAAQ,EAAErD,gBAAiB;YAAAoC,QAAA,gBAC5CvE,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,EAAE;cAAAqC,QAAA,eAACvE,OAAA;gBAAAuE,QAAA,EAAI;cAAS;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,EAC/CvB,SAAS,CAACmC,GAAG,CAAC,CAACE,IAAI,EAAEC,KAAK,kBACvB5F,OAAA,CAACZ,QAAQ;cAAa8C,KAAK,EAAEyD,IAAK;cAAApB,QAAA,EAAEoB;YAAI,GAAzBC,KAAK;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+B,CACtD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAGP7E,OAAA,CAACX,IAAI;QAACgG,IAAI;QAACL,KAAK,EAAE;UAAEM,UAAU,EAAE;QAAQ,CAAE;QAAAf,QAAA,eACtCvE,OAAA,CAACf,WAAW;UAACsG,SAAS;UAAAhB,QAAA,gBAClBvE,OAAA,CAACd,UAAU;YAAAqF,QAAA,EAAC;UAAG;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC5B7E,OAAA,CAACb,MAAM;YAAC+C,KAAK,EAAExB,GAAI;YAAC8E,QAAQ,EAAEpD,eAAgB;YAAAmC,QAAA,gBAC1CvE,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,EAAE;cAAAqC,QAAA,eAACvE,OAAA;gBAAAuE,QAAA,EAAI;cAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC/C7E,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,SAAS;cAAAqC,QAAA,EAAC;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC5C7E,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,WAAW;cAAAqC,QAAA,EAAC;YAAS;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAChD7E,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,UAAU;cAAAqC,QAAA,EAAC;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC9C7E,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,QAAQ;cAAAqC,QAAA,EAAC;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC1C7E,OAAA,CAACZ,QAAQ;cAAC8C,KAAK,EAAC,UAAU;cAAAqC,QAAA,EAAC;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAGP7E,OAAA,CAACX,IAAI;QAACgG,IAAI;QAACL,KAAK,EAAE;UAAEM,UAAU,EAAE,OAAO;UAAEL,OAAO,EAAE,MAAM;UAAEY,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAa,CAAE;QAAAxB,QAAA,eAC9HvE,OAAA,CAACV,MAAM;UACHkF,OAAO,EAAC,WAAW;UACnBwB,KAAK,EAAC,SAAS;UACfhB,KAAK,EAAE;YAAEiB,QAAQ,EAAE,MAAM;YAAEC,OAAO,EAAE;UAAY,CAAE;UAClDC,OAAO,EAAE7D,oBAAqB;UAAAiC,QAAA,EACjC;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEP7E,OAAA,CAACT,KAAK;MAAC+E,SAAS,EAAC,gBAAgB;MAAC8B,SAAS,EAAE,CAAE;MAACpB,KAAK,EAAE;QAAEqB,SAAS,EAAE;MAAO,CAAE;MAAA9B,QAAA,gBACzEvE,OAAA,CAAChB,UAAU;QAACwF,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAA6B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACnE7E,OAAA,CAACR,IAAI;QAAA+E,QAAA,EACAR,kBAAkB,CAAC0B,GAAG,CAACa,SAAS,iBAC7BtG,OAAA,CAACP,QAAQ;UAAA8E,QAAA,eACLvE,OAAA,CAACN,YAAY;YACT6G,OAAO,EAAE,GAAGD,SAAS,CAACE,IAAI,MAAMF,SAAS,CAAChG,QAAQ,UAAUgG,SAAS,CAAC1F,KAAK,EAAG;YAC9E6F,SAAS,EAAE,aAAaH,SAAS,CAACI,QAAQ,cAAcJ,SAAS,CAACK,MAAM,uBAAuBL,SAAS,CAACzD,cAAc,CAAC+D,IAAI,CAAC,IAAI,CAAC;UAAG;YAAAlC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxI;QAAC,GAJSyB,SAAS,CAACO,EAAE;UAAAnC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKjB,CACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAER7E,OAAA,CAACV,MAAM;MACHkF,OAAO,EAAC,WAAW;MACnBwB,KAAK,EAAC,WAAW;MACjBhB,KAAK,EAAE;QAAEqB,SAAS,EAAE;MAAO,CAAE;MAC7BF,OAAO,EAAEA,CAAA,KAAM/E,QAAQ,CAAC,QAAQ,CAAE;MAAAmD,QAAA,EACrC;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGT7E,OAAA,CAACL,QAAQ;MAACmH,IAAI,EAAE5F,YAAa;MAAC6F,gBAAgB,EAAE,IAAK;MAACC,OAAO,EAAE3C,mBAAoB;MAAAE,QAAA,eAC/EvE,OAAA,CAACJ,QAAQ;QAACoH,OAAO,EAAE3C,mBAAoB;QAAC4C,QAAQ,EAAEnG,KAAK,GAAG,OAAO,GAAG,SAAU;QAAAyD,QAAA,EACzEzD,KAAK,IAAIE;MAAO;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEpB;AAAC3E,EAAA,CAxOQD,GAAG;EAAA,QAUSnB,WAAW;AAAA;AAAAoI,EAAA,GAVvBjH,GAAG;AA0OZ,SAASkH,UAAUA,CAAA,EAAG;EAClB,oBACInH,OAAA,CAACpB,MAAM;IAAA2F,QAAA,gBACHvE,OAAA,CAACnB,KAAK;MAACuI,IAAI,EAAC,QAAQ;MAACC,OAAO,eAAErH,OAAA,CAACH,SAAS;QAAA6E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/C7E,OAAA,CAACnB,KAAK;MAACuI,IAAI,EAAC,OAAO;MAACC,OAAO,eAAErH,OAAA,CAACF,WAAW;QAAA4E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChD7E,OAAA,CAACnB,KAAK;MAACuI,IAAI,EAAC,GAAG;MAACC,OAAO,eAAErH,OAAA,CAACC,GAAG;QAAAyE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEjB;AAACyC,GAAA,GARQH,UAAU;AAUnB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}